package main

import (
	"fmt"

	"github.com/kataras/i18n"
)

//  1. install a go-bindata tool, e.g.
//     $ go get -u github.com/go-bindata/go-bindata/...
//  2. embed local files to your application
//     $ go-bindata  -o locales.go ../basic/locales/...
//  3. use the `i18n.New` and `i18n.Assets` package-level functions to initialize and load the languages
//     `i18n.New(i18n.Assets(AssetNames, Asset), languages...)`
//
// ^ The `AssetNames` and `Asset` functions are generated by `go-bindata`
//  3. run the example
//     $ go run .
type user struct {
	Name string
	Age  int
}

func main() {
	I18n, err := i18n.New(i18n.Assets(AssetNames, Asset), "en-US", "el-GR", "zh-CN")
	if err != nil {
		panic(err)
	}

	//
	// The rest as expected...
	//

	// Fmt style.
	enText := I18n.Tr("en", "hi", "John Doe") // or "en-US"
	elText := I18n.Tr("el", "hi", "John Doe")
	zhText := I18n.Tr("zh", "hi", "John Doe")

	fmt.Println(enText)
	fmt.Println(elText)
	fmt.Println(zhText)

	// Templates style.
	templateData := user{
		Name: "John Doe",
		Age:  66,
	}

	enText = I18n.Tr("en-US", "intro", templateData) // or "en"
	elText = I18n.Tr("el-GR", "intro", templateData)
	zhText = I18n.Tr("zh-CN", "intro", templateData)

	fmt.Println(enText)
	fmt.Println(elText)
	fmt.Println(zhText)
}
